Если хотим сделать мерж из веток в более высого ранга ветку, может быть конфлик. Тогда идея предоставит
выбор нам. Там мы можем либо то, либо то или все вместе.

---------------------
Вернуться на прежнюю версию кода  вветке, можно
внизу надпись Git, откроются ветки. Правой кнопко меню, выбираем revert Comit
У каждого комита свой номер

В файле Readme иногда пишут как работать с той или иной библиотекой и тд
gitignore - то что нужно игнорировать при работе с гитом на яве

Что бы вернуть вкладку коммит в sidebar- settings - version control -
- commit - use not modal comit interface

---------------------------
pull request v git hub это запрос на слияние с веткой запушиной

------------------------

cheripic --  комит с комитом

-----------------------------

Ветка 1

Возвратился с папкой идеа с гитигнором через
Git- chekcout revision в меню правой кнопкой на бренч

Перегрузка методов-----
разные параметры и их количество
А так же тип параметров

---------------------------
psvm ----создание метода мейн


--------------------------
Protected ---- как и private, только имеют доступы наследники
-------------------------------
С помощью рефлексии можно обращаться к приватным полям методов

------------------------------
Классы называются именем Существительным
Методы глаголами
---------------------------
Абстрактные классы и интерфейсы немного похожи,
но все же разные
Интерфейсы - это шаблон как будет выглядеть реализация
Наследование только от одного, а имплементировать много можно
Из интерфейсов можно получить множественное наследование
через default - но это частный случай

------------------------------------
Напрямую с Json не работаю для чтения и записи
использую гесоны и тд...

junit --- тестовый runer, то что запускает тесты

maven---сборщик проектов, кодатип параметров